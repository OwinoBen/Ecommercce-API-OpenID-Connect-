# Use Ubuntu as the base image
FROM ubuntu:20.04

MAINTAINER Benson Opondo

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# Install system dependencies
RUN apt-get update
RUN apt-get install -y python3.9
RUN apt-get install -y python3-pip
RUN apt-get install -y python3-dev
RUN apt-get install -y libpq-dev
RUN apt-get install -y postgresql-server-dev-all
RUN apt-get install -y gcc
RUN apt-get install -y git
RUN apt-get install -y vim
RUN apt-get install -y musl-dev
RUN apt-get install -y librabbitmq-dev
RUN apt-get install -y nginx

# Upgrade pip
RUN pip3 install --upgrade pip

# Create a working directory for the app
WORKDIR /savannah_api

# Copy the application files into the image
COPY . .

# Install application dependencies
COPY ./requirements.txt .
#RUN pip3 install --no-cache-dir -r requirements.txt
RUN pip3 install -r requirements.txt

# create directory for the app user
RUN mkdir -p /home/app

# Create directories
ENV HOME=/home/app
ENV APP_HOME=/home/app/api
RUN mkdir -p $APP_HOME/staticfiles
RUN mkdir -p $APP_HOME/mediafiles
RUN mkdir -p $HOME/logs
RUN mkdir -p $APP_HOME

WORKDIR $APP_HOME

VOLUME ["$APP_HOME/media/", "$HOME/logs/", "$APP_HOME/static/"]

# Copy Nginx configuration
COPY ./nginx/nginx.conf /etc/nginx/sites-available/
RUN ln -s /etc/nginx/sites-available/nginx.conf /etc/nginx/sites-enabled
RUN echo "daemon off;" >> /etc/nginx/nginx.conf

# Copy entrypoint script
COPY ./entrypoint.prod.sh .
RUN sed -i 's/\r$//g' $APP_HOME/entrypoint.prod.sh
RUN chmod +x $APP_HOME/entrypoint.prod.sh

# Copy the project files
COPY . $APP_HOME

EXPOSE 8000
# Run entrypoint script
ENTRYPOINT ["/home/app/api/entrypoint.prod.sh"]

