version: 2.1

jobs:
  create-docker-image:
    docker:
      - image: cimg/python:3.10.1
    parallelism: 2
    steps:
      - checkout
      - restore_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
      - run:
          name: Installing dependencies
          command: pip install -r requirements.txt
      - save_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
          paths:
            - "venv"
      - run:
          name: Installing docker compose
          environment:
            COMPOSE_VERSION: '1.29.2'
          command:  |
            curl -L "https://github.com/docker/compose/releases/download/${COMPOSE_VERSION}/docker-compose-$(uname -s)-$(uname -m)" -o ~/docker-compose
            chmod +x ~/docker-compose
            sudo mv ~/docker-compose /usr/local/bin/docker-compose
      - setup_remote_docker:
          version: 19.03.13
          docker_layer_caching: true
      - run:
          name: Setting up docker
          command: |
            docker-compose -f docker-compose.prod.yml up -d --build
      - run:
          name: running tests with coverage
          command: |
            docker-compose -f docker-compose.prod.yml exec web coverage run manage.py test
            docker-compose -f docker-compose.prod.yml exec web coverage html
            docker-compose -f docker-compose.prod.yml exec web ls /home/app/api/htmlcov
      - run:
          name: copy the coverage results to circleci directory
          command: |
            mkdir -p $HOME/app/api/htmlcov
            docker-compose -f docker-compose.prod.yml exec web cp -r /home/app/api/htmlcov $HOME/app/api/htmlcov
            ls $HOME/app/api/htmlcov
      - store_artifacts:
          path: /app/api/htmlcov/
          destination: test_coverage_results

  build-and-push-to-ecr:
    docker:
      - image: cimg/python:3.10.1
    steps:
      - checkout
      # Install docker-compose
      - run:
          name: Initializing docker compose
          command: |
            curl -L "https://github.com/docker/compose/releases/download/${COMPOSE_VERSION}/docker-compose-$(uname -s)-$(uname -m)" -o ~/docker-compose
            chmod +x ~/docker-compose
            sudo mv ~/docker-compose /usr/local/bin/docker-compose
      - setup_remote_docker:
          version: 19.03.13
          docker_layer_caching: true
      - run:
          name: Authenticate with AWS ECR and DOCKERHUB
          # install aws cli with pip to enable aws configuration
          command: |
            pip install awscli
            aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
            aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
            aws configure set default.region $AWS_DEFAULT_REGION
            aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - run:
          name: Build, tag docker images and push to ECR
          command: |
            docker-compose -f docker-compose.prod.yml build
            docker-compose -f docker-compose.prod.yml push      

workflows:
  build-and-test-workflow:
    jobs:
      - create-docker-image:
          context: Docker-create
          filters:
            branches:
              only:
                - main
      - build-and-push-to-ecr:
          requires:
            - create-docker-image
